import tkinter as tk
from tkinter import messagebox

class TodoApp:
    def _init_(self, root):
        self.root = root
        self.root.title("To-Do List App")

        # Initialize tasks list
        self.tasks = []

        # Create UI elements
        self.task_entry = tk.Entry(self.root, width=50)
        self.task_entry.grid(row=0, column=0, padx=10, pady=10)

        self.add_task_button = tk.Button(self.root, text="Add Task", command=self.add_task)
        self.add_task_button.grid(row=0, column=1, padx=10, pady=10)

        self.task_listbox = tk.Listbox(self.root, width=60, height=10)
        self.task_listbox.grid(row=1, column=0, columnspan=2, padx=10, pady=10)

        self.delete_task_button = tk.Button(self.root, text="Delete Task", command=self.delete_task)
        self.delete_task_button.grid(row=2, column=0, padx=10, pady=10)

        self.complete_task_button = tk.Button(self.root, text="Complete Task", command=self.complete_task)
        self.complete_task_button.grid(row=2, column=1, padx=10, pady=10)

        # Populate initial tasks (for testing)
        self.populate_tasks()

    def populate_tasks(self):
        # For testing purposes, pre-populate some tasks
        initial_tasks = ["Task 1", "Task 2", "Task 3"]

        for task in initial_tasks:
            self.tasks.append(task)
            self.task_listbox.insert(tk.END, task)

    def add_task(self):
        new_task = self.task_entry.get()
        if new_task:
            self.tasks.append(new_task)
            self.task_listbox.insert(tk.END, new_task)
            self.task_entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Warning", "Please enter a task.")

    def delete_task(self):
        try:
            index = self.task_listbox.curselection()[0]
            self.task_listbox.delete(index)
            del self.tasks[index]
        except IndexError:
            messagebox.showwarning("Warning", "Please select a task to delete.")

    def complete_task(self):
        try:
            index = self.task_listbox.curselection()[0]
            self.task_listbox.itemconfig(index, {'bg': 'gray'})
        except IndexError:
            messagebox.showwarning("Warning", "Please select a task to mark as complete.")

if _name_ == "_main_":
    root = tk.Tk()
    app = TodoApp(root)
    root.mainloop()
